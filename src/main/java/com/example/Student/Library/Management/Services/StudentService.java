package com.example.Student.Library.Management.Services;

import com.example.Student.Library.Management.Enums.CardStatus;
import com.example.Student.Library.Management.Models.Card;
import com.example.Student.Library.Management.Models.Student;
import com.example.Student.Library.Management.Repositories.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {
    @Autowired
    StudentRepository studentRepository;
    public String createStudent(Student student){

        //Student from the position is already the basic attributes set.


        //Card should be autogenerated when createStudent function is called

        Card card=new Card();
        card.setCardStatus(CardStatus.ACTIVATED);  //Card status is Set
        card.setStudentVariableName(student);  //Foreign Key attribute

        //Let's go the student
        student.setCard(card);

        //If there was a unidirectional mapping : we had to save both of them then

        //but we are super advance and are using bidirectional : child will automatically be saved

        studentRepository.save(student);

        //By cascade effect, child is automatically be saved.


        return "Student and card is Added";

    }
}
